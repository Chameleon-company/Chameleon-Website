import React from 'react';
import PropTypes from 'prop-types';
import type { RangeType } from './shared/types';
type TileGroupProps<T extends React.ElementType> = {
    className?: string;
    count?: number;
    dateTransform: (point: number) => Date;
    dateType: RangeType;
    end: number;
    hover?: Date;
    offset?: number;
    start: number;
    step?: number;
    tile: T;
    value?: Date;
    valueType: RangeType;
} & React.ComponentProps<T>;
declare function TileGroup<T extends React.ElementType>({ className, count, dateTransform, dateType, end, hover, offset, start, step, tile: Tile, value, valueType, ...tileProps }: TileGroupProps<T>): JSX.Element;
declare namespace TileGroup {
    var propTypes: {
        className: PropTypes.Requireable<string>;
        count: PropTypes.Requireable<number>;
        dateTransform: PropTypes.Validator<(...args: any[]) => any>;
        dateType: PropTypes.Requireable<string>;
        end: PropTypes.Validator<number>;
        offset: PropTypes.Requireable<number>;
        step: PropTypes.Requireable<number>;
        start: PropTypes.Validator<number>;
        tile: PropTypes.Validator<(...args: any[]) => any>;
        activeStartDate: PropTypes.Validator<Date>;
        hover: PropTypes.Requireable<Date>;
        locale: PropTypes.Requireable<string>;
        maxDate: typeof import("./shared/propTypes").isMaxDate;
        minDate: typeof import("./shared/propTypes").isMinDate;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        onMouseOver: PropTypes.Requireable<(...args: any[]) => any>;
        tileClassName: PropTypes.Requireable<NonNullable<((...args: any[]) => any) | NonNullable<string | (string | null | undefined)[] | null | undefined> | null | undefined>>;
        tileContent: PropTypes.Requireable<NonNullable<PropTypes.ReactNodeLike | ((...args: any[]) => any)>>;
        value: PropTypes.Requireable<NonNullable<Date | (Date | null | undefined)[] | null | undefined>>;
        valueType: PropTypes.Requireable<string>;
    };
}
export default TileGroup;
