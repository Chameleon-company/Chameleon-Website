import React from 'react';
import PropTypes from 'prop-types';
import TileGroup from '../TileGroup';
import type { CalendarType } from '../shared/types';
type DaysProps = {
    activeStartDate: Date;
    calendarType: CalendarType;
    showFixedNumberOfWeeks?: boolean;
    showNeighboringMonth?: boolean;
} & React.ComponentProps<typeof TileGroup>;
declare function Days(props: DaysProps): JSX.Element;
declare namespace Days {
    var propTypes: {
        activeStartDate: PropTypes.Validator<Date>;
        hover: PropTypes.Requireable<Date>;
        locale: PropTypes.Requireable<string>;
        maxDate: typeof import("../shared/propTypes").isMaxDate;
        minDate: typeof import("../shared/propTypes").isMinDate;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        onMouseOver: PropTypes.Requireable<(...args: any[]) => any>;
        tileClassName: PropTypes.Requireable<NonNullable<((...args: any[]) => any) | NonNullable<string | (string | null | undefined)[] | null | undefined> | null | undefined>>;
        tileContent: PropTypes.Requireable<NonNullable<PropTypes.ReactNodeLike | ((...args: any[]) => any)>>;
        value: PropTypes.Requireable<NonNullable<Date | (Date | null | undefined)[] | null | undefined>>;
        valueType: PropTypes.Requireable<string>;
        calendarType: PropTypes.Requireable<"Arabic" | "Hebrew" | "ISO 8601" | "US">;
        showFixedNumberOfWeeks: PropTypes.Requireable<boolean>;
        showNeighboringMonth: PropTypes.Requireable<boolean>;
    };
}
export default Days;
